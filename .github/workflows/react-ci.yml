name: DEV - Deploy to GCP Kubernetes

on:
  push:
    branches:
      - main

env:
  GCP_PROJECT_ID: test-project-449507
  GCP_REGION: asia-south1-a
 
  IMAGE_NAME: gcr.io/test-project-449507/stride
  IMAGE_TAG: latest
  GKE_CLUSTER: cluster-1
  GKE_REGION: asia-south1-a

  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: deployment
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ env.GCP_SA_KEY }}
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
         # service_account_key: ${{ env.GCP_SA_KEY }}

      - name: Configure Docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker ${GCP_REGION}-docker.pkg.dev

      - name: Build, tag, and push image to Google Artifact Repository
        run: |
          docker buildx create --use
          docker buildx build --push \
            --tag ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache \
            .
          echo "IMAGE_URI=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}" >> $GITHUB_ENV

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_REGION }}

      - name: Deploy to GKE
        run: |
          kubectl apply -f ./worker-deployment.yaml
          kubectl rollout restart deployment worker

      - name: Wait for Deployment Rollout
        run: |
          kubectl rollout status deployment/worker --timeout=120s